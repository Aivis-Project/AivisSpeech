/* tslint:disable */
/* eslint-disable */
/**
 * AivisSpeech Engine
 * AivisSpeech の音声合成エンジンです。
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AivmInfoSpeaker } from './AivmInfoSpeaker';
import {
    AivmInfoSpeakerFromJSON,
    AivmInfoSpeakerFromJSONTyped,
    AivmInfoSpeakerToJSON,
} from './AivmInfoSpeaker';

/**
 * 音声合成モデルの情報
 * @export
 * @interface AivmInfo
 */
export interface AivmInfo {
    /**
     * 
     * @type {string}
     * @memberof AivmInfo
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AivmInfo
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof AivmInfo
     */
    modelArchitecture: string;
    /**
     * 
     * @type {string}
     * @memberof AivmInfo
     */
    uuid: string;
    /**
     * 
     * @type {string}
     * @memberof AivmInfo
     */
    version: string;
    /**
     * 
     * @type {Array<AivmInfoSpeaker>}
     * @memberof AivmInfo
     */
    speakers: Array<AivmInfoSpeaker>;
}

/**
 * Check if a given object implements the AivmInfo interface.
 */
export function instanceOfAivmInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "modelArchitecture" in value;
    isInstance = isInstance && "uuid" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "speakers" in value;

    return isInstance;
}

export function AivmInfoFromJSON(json: any): AivmInfo {
    return AivmInfoFromJSONTyped(json, false);
}

export function AivmInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AivmInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'modelArchitecture': json['model_architecture'],
        'uuid': json['uuid'],
        'version': json['version'],
        'speakers': ((json['speakers'] as Array<any>).map(AivmInfoSpeakerFromJSON)),
    };
}

export function AivmInfoToJSON(value?: AivmInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'model_architecture': value.modelArchitecture,
        'uuid': value.uuid,
        'version': value.version,
        'speakers': ((value.speakers as Array<any>).map(AivmInfoSpeakerToJSON)),
    };
}

